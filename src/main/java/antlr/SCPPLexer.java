package antlr;// Generated from SCPP.g4 by ANTLR 4.7.1

import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class SCPPLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, STRING=36, LIBRARY=37, ID=38, 
		INT=39, HEX=40, BIN=41, VARIABLE_MODIFIER=42, VARIABLE_SINGLE_MODIFIER=43, 
		OPERATOR=44, WS=45, SINGLE_COMMENT=46, BLOCK_COMMENT=47;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "STRING", "LIBRARY", "ID", "INT", "HEX", "BIN", "VARIABLE_MODIFIER", 
		"VARIABLE_SINGLE_MODIFIER", "OPERATOR", "WS", "SINGLE_COMMENT", "BLOCK_COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "';'", "'public'", "'namespace'", "'uses'", "'('", "')'", "'is'", 
		"'inline'", "'func'", "'if'", "'else'", "'while'", "'for'", "'from'", 
		"'to'", "'by'", "'switch'", "'{'", "'}'", "'case'", "'->'", "'default'", 
		"'var'", "'='", "'return'", "'#'", "'define'", "'include'", "','", "'['", 
		"']'", "'::'", "'?'", "':'", "'!'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		"STRING", "LIBRARY", "ID", "INT", "HEX", "BIN", "VARIABLE_MODIFIER", "VARIABLE_SINGLE_MODIFIER", 
		"OPERATOR", "WS", "SINGLE_COMMENT", "BLOCK_COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SCPPLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SCPP.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\61\u017f\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\6\3\6"+
		"\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3"+
		"\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3"+
		"\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3"+
		"\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\25\3\25\3\25\3\25\3"+
		"\25\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3"+
		"\30\3\30\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\34\3"+
		"\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3"+
		"\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3%\7%\u00f6"+
		"\n%\f%\16%\u00f9\13%\3%\3%\3&\3&\6&\u00ff\n&\r&\16&\u0100\3&\7&\u0104"+
		"\n&\f&\16&\u0107\13&\3&\3&\3\'\6\'\u010c\n\'\r\'\16\'\u010d\3\'\7\'\u0111"+
		"\n\'\f\'\16\'\u0114\13\'\3(\5(\u0117\n(\3(\6(\u011a\n(\r(\16(\u011b\3"+
		"(\3(\6(\u0120\n(\r(\16(\u0121\5(\u0124\n(\3(\3(\6(\u0128\n(\r(\16(\u0129"+
		"\5(\u012c\n(\3)\3)\3)\3)\6)\u0132\n)\r)\16)\u0133\3*\3*\3*\3*\6*\u013a"+
		"\n*\r*\16*\u013b\3+\3+\3+\3,\3,\3,\3,\5,\u0145\n,\3-\3-\3-\3-\3-\3-\3"+
		"-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\3-\5-\u015c\n-\3.\6.\u015f\n"+
		".\r.\16.\u0160\3.\3.\3/\3/\3/\3/\7/\u0169\n/\f/\16/\u016c\13/\3/\3/\3"+
		"/\3/\3\60\3\60\3\60\3\60\7\60\u0176\n\60\f\60\16\60\u0179\13\60\3\60\3"+
		"\60\3\60\3\60\3\60\4\u016a\u0177\2\61\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21"+
		"\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30"+
		"/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.["+
		"/]\60_\61\3\2\13\3\2$$\5\2C\\aac|\6\2\62;C\\aac|\3\2\62;\5\2\62;CHch\5"+
		"\2,-//\61\61\5\2\'(``~~\4\2>>@@\5\2\13\f\17\17\"\"\2\u019b\2\3\3\2\2\2"+
		"\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2"+
		"\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2"+
		"\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2"+
		"\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2"+
		"\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2"+
		"\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2"+
		"\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W"+
		"\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\3a\3\2\2\2\5c\3\2"+
		"\2\2\7j\3\2\2\2\tt\3\2\2\2\13y\3\2\2\2\r{\3\2\2\2\17}\3\2\2\2\21\u0080"+
		"\3\2\2\2\23\u0087\3\2\2\2\25\u008c\3\2\2\2\27\u008f\3\2\2\2\31\u0094\3"+
		"\2\2\2\33\u009a\3\2\2\2\35\u009e\3\2\2\2\37\u00a3\3\2\2\2!\u00a6\3\2\2"+
		"\2#\u00a9\3\2\2\2%\u00b0\3\2\2\2\'\u00b2\3\2\2\2)\u00b4\3\2\2\2+\u00b9"+
		"\3\2\2\2-\u00bc\3\2\2\2/\u00c4\3\2\2\2\61\u00c8\3\2\2\2\63\u00ca\3\2\2"+
		"\2\65\u00d1\3\2\2\2\67\u00d3\3\2\2\29\u00da\3\2\2\2;\u00e2\3\2\2\2=\u00e4"+
		"\3\2\2\2?\u00e6\3\2\2\2A\u00e8\3\2\2\2C\u00eb\3\2\2\2E\u00ed\3\2\2\2G"+
		"\u00ef\3\2\2\2I\u00f1\3\2\2\2K\u00fc\3\2\2\2M\u010b\3\2\2\2O\u012b\3\2"+
		"\2\2Q\u012d\3\2\2\2S\u0135\3\2\2\2U\u013d\3\2\2\2W\u0144\3\2\2\2Y\u015b"+
		"\3\2\2\2[\u015e\3\2\2\2]\u0164\3\2\2\2_\u0171\3\2\2\2ab\7=\2\2b\4\3\2"+
		"\2\2cd\7r\2\2de\7w\2\2ef\7d\2\2fg\7n\2\2gh\7k\2\2hi\7e\2\2i\6\3\2\2\2"+
		"jk\7p\2\2kl\7c\2\2lm\7o\2\2mn\7g\2\2no\7u\2\2op\7r\2\2pq\7c\2\2qr\7e\2"+
		"\2rs\7g\2\2s\b\3\2\2\2tu\7w\2\2uv\7u\2\2vw\7g\2\2wx\7u\2\2x\n\3\2\2\2"+
		"yz\7*\2\2z\f\3\2\2\2{|\7+\2\2|\16\3\2\2\2}~\7k\2\2~\177\7u\2\2\177\20"+
		"\3\2\2\2\u0080\u0081\7k\2\2\u0081\u0082\7p\2\2\u0082\u0083\7n\2\2\u0083"+
		"\u0084\7k\2\2\u0084\u0085\7p\2\2\u0085\u0086\7g\2\2\u0086\22\3\2\2\2\u0087"+
		"\u0088\7h\2\2\u0088\u0089\7w\2\2\u0089\u008a\7p\2\2\u008a\u008b\7e\2\2"+
		"\u008b\24\3\2\2\2\u008c\u008d\7k\2\2\u008d\u008e\7h\2\2\u008e\26\3\2\2"+
		"\2\u008f\u0090\7g\2\2\u0090\u0091\7n\2\2\u0091\u0092\7u\2\2\u0092\u0093"+
		"\7g\2\2\u0093\30\3\2\2\2\u0094\u0095\7y\2\2\u0095\u0096\7j\2\2\u0096\u0097"+
		"\7k\2\2\u0097\u0098\7n\2\2\u0098\u0099\7g\2\2\u0099\32\3\2\2\2\u009a\u009b"+
		"\7h\2\2\u009b\u009c\7q\2\2\u009c\u009d\7t\2\2\u009d\34\3\2\2\2\u009e\u009f"+
		"\7h\2\2\u009f\u00a0\7t\2\2\u00a0\u00a1\7q\2\2\u00a1\u00a2\7o\2\2\u00a2"+
		"\36\3\2\2\2\u00a3\u00a4\7v\2\2\u00a4\u00a5\7q\2\2\u00a5 \3\2\2\2\u00a6"+
		"\u00a7\7d\2\2\u00a7\u00a8\7{\2\2\u00a8\"\3\2\2\2\u00a9\u00aa\7u\2\2\u00aa"+
		"\u00ab\7y\2\2\u00ab\u00ac\7k\2\2\u00ac\u00ad\7v\2\2\u00ad\u00ae\7e\2\2"+
		"\u00ae\u00af\7j\2\2\u00af$\3\2\2\2\u00b0\u00b1\7}\2\2\u00b1&\3\2\2\2\u00b2"+
		"\u00b3\7\177\2\2\u00b3(\3\2\2\2\u00b4\u00b5\7e\2\2\u00b5\u00b6\7c\2\2"+
		"\u00b6\u00b7\7u\2\2\u00b7\u00b8\7g\2\2\u00b8*\3\2\2\2\u00b9\u00ba\7/\2"+
		"\2\u00ba\u00bb\7@\2\2\u00bb,\3\2\2\2\u00bc\u00bd\7f\2\2\u00bd\u00be\7"+
		"g\2\2\u00be\u00bf\7h\2\2\u00bf\u00c0\7c\2\2\u00c0\u00c1\7w\2\2\u00c1\u00c2"+
		"\7n\2\2\u00c2\u00c3\7v\2\2\u00c3.\3\2\2\2\u00c4\u00c5\7x\2\2\u00c5\u00c6"+
		"\7c\2\2\u00c6\u00c7\7t\2\2\u00c7\60\3\2\2\2\u00c8\u00c9\7?\2\2\u00c9\62"+
		"\3\2\2\2\u00ca\u00cb\7t\2\2\u00cb\u00cc\7g\2\2\u00cc\u00cd\7v\2\2\u00cd"+
		"\u00ce\7w\2\2\u00ce\u00cf\7t\2\2\u00cf\u00d0\7p\2\2\u00d0\64\3\2\2\2\u00d1"+
		"\u00d2\7%\2\2\u00d2\66\3\2\2\2\u00d3\u00d4\7f\2\2\u00d4\u00d5\7g\2\2\u00d5"+
		"\u00d6\7h\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8\7p\2\2\u00d8\u00d9\7g\2\2"+
		"\u00d98\3\2\2\2\u00da\u00db\7k\2\2\u00db\u00dc\7p\2\2\u00dc\u00dd\7e\2"+
		"\2\u00dd\u00de\7n\2\2\u00de\u00df\7w\2\2\u00df\u00e0\7f\2\2\u00e0\u00e1"+
		"\7g\2\2\u00e1:\3\2\2\2\u00e2\u00e3\7.\2\2\u00e3<\3\2\2\2\u00e4\u00e5\7"+
		"]\2\2\u00e5>\3\2\2\2\u00e6\u00e7\7_\2\2\u00e7@\3\2\2\2\u00e8\u00e9\7<"+
		"\2\2\u00e9\u00ea\7<\2\2\u00eaB\3\2\2\2\u00eb\u00ec\7A\2\2\u00ecD\3\2\2"+
		"\2\u00ed\u00ee\7<\2\2\u00eeF\3\2\2\2\u00ef\u00f0\7#\2\2\u00f0H\3\2\2\2"+
		"\u00f1\u00f7\7$\2\2\u00f2\u00f6\n\2\2\2\u00f3\u00f4\7^\2\2\u00f4\u00f6"+
		"\7$\2\2\u00f5\u00f2\3\2\2\2\u00f5\u00f3\3\2\2\2\u00f6\u00f9\3\2\2\2\u00f7"+
		"\u00f5\3\2\2\2\u00f7\u00f8\3\2\2\2\u00f8\u00fa\3\2\2\2\u00f9\u00f7\3\2"+
		"\2\2\u00fa\u00fb\7$\2\2\u00fbJ\3\2\2\2\u00fc\u00fe\7>\2\2\u00fd\u00ff"+
		"\t\3\2\2\u00fe\u00fd\3\2\2\2\u00ff\u0100\3\2\2\2\u0100\u00fe\3\2\2\2\u0100"+
		"\u0101\3\2\2\2\u0101\u0105\3\2\2\2\u0102\u0104\t\4\2\2\u0103\u0102\3\2"+
		"\2\2\u0104\u0107\3\2\2\2\u0105\u0103\3\2\2\2\u0105\u0106\3\2\2\2\u0106"+
		"\u0108\3\2\2\2\u0107\u0105\3\2\2\2\u0108\u0109\7@\2\2\u0109L\3\2\2\2\u010a"+
		"\u010c\t\3\2\2\u010b\u010a\3\2\2\2\u010c\u010d\3\2\2\2\u010d\u010b\3\2"+
		"\2\2\u010d\u010e\3\2\2\2\u010e\u0112\3\2\2\2\u010f\u0111\t\4\2\2\u0110"+
		"\u010f\3\2\2\2\u0111\u0114\3\2\2\2\u0112\u0110\3\2\2\2\u0112\u0113\3\2"+
		"\2\2\u0113N\3\2\2\2\u0114\u0112\3\2\2\2\u0115\u0117\7/\2\2\u0116\u0115"+
		"\3\2\2\2\u0116\u0117\3\2\2\2\u0117\u0119\3\2\2\2\u0118\u011a\t\5\2\2\u0119"+
		"\u0118\3\2\2\2\u011a\u011b\3\2\2\2\u011b\u0119\3\2\2\2\u011b\u011c\3\2"+
		"\2\2\u011c\u0123\3\2\2\2\u011d\u011f\7\60\2\2\u011e\u0120\t\5\2\2\u011f"+
		"\u011e\3\2\2\2\u0120\u0121\3\2\2\2\u0121\u011f\3\2\2\2\u0121\u0122\3\2"+
		"\2\2\u0122\u0124\3\2\2\2\u0123\u011d\3\2\2\2\u0123\u0124\3\2\2\2\u0124"+
		"\u012c\3\2\2\2\u0125\u0127\7\60\2\2\u0126\u0128\t\5\2\2\u0127\u0126\3"+
		"\2\2\2\u0128\u0129\3\2\2\2\u0129\u0127\3\2\2\2\u0129\u012a\3\2\2\2\u012a"+
		"\u012c\3\2\2\2\u012b\u0116\3\2\2\2\u012b\u0125\3\2\2\2\u012cP\3\2\2\2"+
		"\u012d\u012e\7\62\2\2\u012e\u012f\7z\2\2\u012f\u0131\3\2\2\2\u0130\u0132"+
		"\t\6\2\2\u0131\u0130\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0131\3\2\2\2\u0133"+
		"\u0134\3\2\2\2\u0134R\3\2\2\2\u0135\u0136\7\62\2\2\u0136\u0137\7d\2\2"+
		"\u0137\u0139\3\2\2\2\u0138\u013a\4\62\63\2\u0139\u0138\3\2\2\2\u013a\u013b"+
		"\3\2\2\2\u013b\u0139\3\2\2\2\u013b\u013c\3\2\2\2\u013cT\3\2\2\2\u013d"+
		"\u013e\5Y-\2\u013e\u013f\7?\2\2\u013fV\3\2\2\2\u0140\u0141\7-\2\2\u0141"+
		"\u0145\7-\2\2\u0142\u0143\7/\2\2\u0143\u0145\7/\2\2\u0144\u0140\3\2\2"+
		"\2\u0144\u0142\3\2\2\2\u0145X\3\2\2\2\u0146\u015c\t\7\2\2\u0147\u0148"+
		"\7@\2\2\u0148\u015c\7@\2\2\u0149\u014a\7>\2\2\u014a\u015c\7>\2\2\u014b"+
		"\u015c\t\b\2\2\u014c\u014d\7~\2\2\u014d\u015c\7~\2\2\u014e\u014f\7(\2"+
		"\2\u014f\u015c\7(\2\2\u0150\u015c\t\t\2\2\u0151\u0152\7?\2\2\u0152\u015c"+
		"\7?\2\2\u0153\u0154\7#\2\2\u0154\u015c\7?\2\2\u0155\u0156\7@\2\2\u0156"+
		"\u015c\7?\2\2\u0157\u0158\7>\2\2\u0158\u015c\7?\2\2\u0159\u015a\7\60\2"+
		"\2\u015a\u015c\7\60\2\2\u015b\u0146\3\2\2\2\u015b\u0147\3\2\2\2\u015b"+
		"\u0149\3\2\2\2\u015b\u014b\3\2\2\2\u015b\u014c\3\2\2\2\u015b\u014e\3\2"+
		"\2\2\u015b\u0150\3\2\2\2\u015b\u0151\3\2\2\2\u015b\u0153\3\2\2\2\u015b"+
		"\u0155\3\2\2\2\u015b\u0157\3\2\2\2\u015b\u0159\3\2\2\2\u015cZ\3\2\2\2"+
		"\u015d\u015f\t\n\2\2\u015e\u015d\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u015e"+
		"\3\2\2\2\u0160\u0161\3\2\2\2\u0161\u0162\3\2\2\2\u0162\u0163\b.\2\2\u0163"+
		"\\\3\2\2\2\u0164\u0165\7\61\2\2\u0165\u0166\7\61\2\2\u0166\u016a\3\2\2"+
		"\2\u0167\u0169\13\2\2\2\u0168\u0167\3\2\2\2\u0169\u016c\3\2\2\2\u016a"+
		"\u016b\3\2\2\2\u016a\u0168\3\2\2\2\u016b\u016d\3\2\2\2\u016c\u016a\3\2"+
		"\2\2\u016d\u016e\7\f\2\2\u016e\u016f\3\2\2\2\u016f\u0170\b/\2\2\u0170"+
		"^\3\2\2\2\u0171\u0172\7\61\2\2\u0172\u0173\7,\2\2\u0173\u0177\3\2\2\2"+
		"\u0174\u0176\13\2\2\2\u0175\u0174\3\2\2\2\u0176\u0179\3\2\2\2\u0177\u0178"+
		"\3\2\2\2\u0177\u0175\3\2\2\2\u0178\u017a\3\2\2\2\u0179\u0177\3\2\2\2\u017a"+
		"\u017b\7,\2\2\u017b\u017c\7\61\2\2\u017c\u017d\3\2\2\2\u017d\u017e\b\60"+
		"\2\2\u017e`\3\2\2\2\33\2\u00f5\u00f7\u00fe\u0100\u0103\u0105\u010b\u010d"+
		"\u0110\u0112\u0116\u011b\u0121\u0123\u0129\u012b\u0131\u0133\u013b\u0144"+
		"\u015b\u0160\u016a\u0177\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}